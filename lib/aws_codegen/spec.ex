defmodule AWS.CodeGen.Spec do
  @moduledoc """
  Parse and process the specfication for an AWS service.
  """

  @module_acronyms ~w(SMS WAF API SES HSM FSx IoT MTurk QLDB DB RDS A2I XRay EC2 SSO IVS MQ SDB OIDC ACMPCA SSM)

  @type t :: %__MODULE__{
          protocol: atom(),
          module_name: binary(),
          filename: binary(),
          api: map(),
          language: binary()
        }

  defstruct protocol: nil,
            module_name: nil,
            filename: nil,
            api: nil,
            language: nil

  def parse(api_filename, language) do
    IO.puts("api_filename: #{api_filename}")
    api_name = Path.basename(api_filename)
                |> String.replace(".json", "")
                |> String.replace("-", "")
    service_name = api_name
                    |> String.replace(~r[^accessanalyzer$], "AccessAnalyzer")
                    |> String.replace(~r[^account$], "Account")
                    |> String.replace(~r[^acmpca$], "ACMPrivateCA")
                    |> String.replace(~r[^acm$], "CertificateManager")
                    |> String.replace(~r[^alexaforbusiness$], "AlexaForBusiness")
                    |> String.replace(~r[^amp$], "AmazonPrometheusService")
                    |> String.replace(~r[^amplify$], "Amplify")
                    |> String.replace(~r[^amplifybackend$], "AmplifyBackend")
                    |> String.replace(~r[^amplifyuibuilder$], "AmplifyUIBuilder")
                    |> String.replace(~r[^apigateway$], "BackplaneControlService")
                    |> String.replace(~r[^apigatewaymanagementapi$], "ApiGatewayManagementApi")
                    |> String.replace(~r[^apigatewayv2$], "ApiGatewayV2")
                    |> String.replace(~r[^appmesh$], "AppMesh")
                    |> String.replace(~r[^appconfig$], "AmazonAppConfig")
                    |> String.replace(~r[^appconfigdata$], "AppConfigData")
                    |> String.replace(~r[^appfabric$], "FabricFrontEndService")
                    |> String.replace(~r[^appflow$], "SandstoneConfigurationServiceLambda")
                    |> String.replace(~r[^appintegrations$], "AmazonAppIntegrationService")
                    |> String.replace(~r[^applicationautoscaling$], "AnyScaleFrontendService")
                    |> String.replace(~r[^applicationdiscoveryservice$], "AWSPoseidonService_V2015_11_01")
                    |> String.replace(~r[^applicationinsights$], "EC2WindowsBarleyService")
                    |> String.replace(~r[^applicationcostprofiler$], "AWSApplicationCostProfiler")
                    |> String.replace(~r[^apprunner$], "AppRunner")
                    |> String.replace(~r[^appstream$], "PhotonAdminProxyService")
                    |> String.replace(~r[^appsync$], "AWSDeepdishControlPlaneService")
                    |> String.replace(~r[^arczonalshift$], "PercDataPlane")
                    |> String.replace(~r[^athena$], "AmazonAthena")
                    |> String.replace(~r[^auditmanager$], "BedrockAssessmentManagerLambda")
                    |> String.replace(~r[^autoscalingplans$], "AnyScaleScalingPlannerFrontendService")
                    |> String.replace(~r[^autoscaling$], "AutoScaling_2011_01_01")
                    |> String.replace(~r[^b2bi$], "B2BI")
                    |> String.replace(~r[^backupgateway$], "BackupOnPremises_v20210101")
                    |> String.replace(~r[^backup$], "CryoControllerUserManager")
                    |> String.replace(~r[^backupstorage$], "CryoStorageFrontendService")
                    |> String.replace(~r[^batch$], "AWSBatchV20160810")
                    |> String.replace(~r[^bcmdataexports$], "AWSBillingAndCostManagementDataExports")
                    |> String.replace(~r[^bedrockagentruntime$], "AmazonBedrockAgentRunTimeService")
                    |> String.replace(~r[^bedrockagent$], "AmazonBedrockAgentBuildTimeLambda")
                    |> String.replace(~r[^bedrockruntime$], "AmazonBedrockFrontendService")
                    |> String.replace(~r[^bedrock$], "AmazonBedrockControlPlaneService")
                    |> String.replace(~r[^billingconductor$], "AWSBillingConductor")
                    |> String.replace(~r[^braket$], "Braket")
                    |> String.replace(~r[^budgets$], "AWSBudgetServiceGateway")
                    |> String.replace(~r[^chimesdkidentity$], "ChimeIdentityService")
                    |> String.replace(~r[^chimesdkmediapipelines$], "ChimeSDKMediaPipelinesService")
                    |> String.replace(~r[^chimesdkmeetings$], "ChimeMeetingsSDKService")
                    |> String.replace(~r[^chimesdkmessaging$], "ChimeMessagingService")
                    |> String.replace(~r[^chimesdkvoice$], "ChimeSDKTelephonyService")
                    |> String.replace(~r[^chime$], "UCBuzzConsoleService")
                    |> String.replace(~r[^cleanrooms$], "AWSBastionControlPlaneServiceLambda")
                    |> String.replace(~r[^cleanroomsml$], "AWSStarkControlService")
                    |> String.replace(~r[^cloud9$], "AWSCloud9WorkspaceManagementService")
                    |> String.replace(~r[^cloudcontrol$], "CloudApiService")
                    |> String.replace(~r[^clouddirectory$], "AmazonCloudDirectory_20170111")
                    |> String.replace(~r[^cloudformation$], "CloudFormation")
                    |> String.replace(~r[^cloudfrontkeyvaluestore$], "CloudFrontKeyValueStore")
                    |> String.replace(~r[^cloudfront$], "Cloudfront2020_05_31")
                    |> String.replace(~r[^cloudhsmv2$], "BaldrApiService")
                    |> String.replace(~r[^cloudhsm$], "CloudHsmFrontendService")
                    |> String.replace(~r[^cloudsearchdomain$], "AmazonCloudSearch2013")
                    |> String.replace(~r[^cloudsearch$], "A9SearchCloudConfigService2013")
                    |> String.replace(~r[^cloudtraildata$], "CloudTrailDataService")
                    |> String.replace(~r[^cloudtrail$], "CloudTrail_20131101")
                    |> String.replace(~r[^cloudwatchevents$], "AWSEvents")
                    |> String.replace(~r[^cloudwatchlogs$], "Logs_20140328")
                    |> String.replace(~r[^cloudwatch$], "GraniteServiceVersion20100801")
                    |> String.replace(~r[^codeartifact$], "CodeArtifactControlPlaneService")
                    |> String.replace(~r[^codebuild$], "CodeBuild_20161006")
                    |> String.replace(~r[^codecatalyst$], "CodeCatalyst")
                    |> String.replace(~r[^codecommit$], "CodeCommit_20150413")
                    |> String.replace(~r[^codedeploy$], "CodeDeploy_20141006")
                    |> String.replace(~r[^codegurureviewer$], "AWSGuruFrontendService")
                    |> String.replace(~r[^codegurusecurity$], "AwsCodeGuruSecurity")
                    |> String.replace(~r[^codeguruprofiler$], "CodeGuruProfiler")
                    |> String.replace(~r[^codepipeline$], "CodePipeline_20150709")
                    |> String.replace(~r[^codestarconnections$], "CodeStar_connections_20191201")
                    |> String.replace(~r[^codestarnotifications$], "CodeStarNotifications_20191015")
                    |> String.replace(~r[^codestar$], "CodeStar_20170419")
                    |> String.replace(~r[^cognitoidentityprovider$], "AWSCognitoIdentityProviderService")
                    |> String.replace(~r[^cognitoidentity$], "AWSCognitoIdentityService")
                    |> String.replace(~r[^cognitosync$], "AWSCognitoSyncService")
                    |> String.replace(~r[^comprehend$], "Comprehend_20171127")
                    |> String.replace(~r[^comprehendmedical$], "ComprehendMedical_20181030")
                    |> String.replace(~r[^computeoptimizer$], "ComputeOptimizerService")
                    |> String.replace(~r[^configservice$], "StarlingDoveService")
                    |> String.replace(~r[^connectcontactlens$], "AmazonConnectContactLens")
                    |> String.replace(~r[^connect$], "AmazonConnectService")
                    |> String.replace(~r[^connectcampaigns$], "AmazonConnectCampaignService")
                    |> String.replace(~r[^connectcases$], "AmazonConnectCases")
                    |> String.replace(~r[^connectparticipant$], "AmazonConnectParticipantServiceLambda")
                    |> String.replace(~r[^controltower$], "AWSControlTowerApis")
                    |> String.replace(~r[^costandusagereportservice$], "AWSOrigamiServiceGatewayService")
                    |> String.replace(~r[^costexplorer$], "AWSInsightsIndexService")
                    |> String.replace(~r[^costoptimizationhub$], "CostOptimizationHubService")
                    |> String.replace(~r[^customerprofiles$], "CustomerProfiles_20200815")
                    |> String.replace(~r[^datapipeline$], "DataPipeline")
                    |> String.replace(~r[^databasemigrationservice$], "AmazonDMSv20160101")
                    |> String.replace(~r[^databrew$], "AWSGlueDataBrew")
                    |> String.replace(~r[^dataexchange$], "DataExchange")
                    |> String.replace(~r[^datasync$], "FmrsService")
                    |> String.replace(~r[^datazone$], "DataZone")
                    |> String.replace(~r[^dax$], "AmazonDAXV3")
                    |> String.replace(~r[^detective$], "AmazonDetective")
                    |> String.replace(~r[^devicefarm$], "DeviceFarm_20150623")
                    |> String.replace(~r[^devopsguru$], "CapstoneControlPlaneService")
                    |> String.replace(~r[^directconnect$], "OvertureService")
                    |> String.replace(~r[^directoryservice$], "DirectoryService_20150416")
                    |> String.replace(~r[^dlm$], "dlm_20180112")
                    |> String.replace(~r[^docdbelastic$], "ChimeraDbLionfishServiceLambda")
                    |> String.replace(~r[^docdb$], "AmazonRDSv19")
                    |> String.replace(~r[^drs$], "ElasticDisasterRecoveryService")
                    |> String.replace(~r[^dynamodbstreams$], "DynamoDBStreams_20120810")
                    |> String.replace(~r[^dynamodb$], "DynamoDB_20120810")
                    |> String.replace(~r[^ebs$], "Ebs")
                    |> String.replace(~r[^ec2instanceconnect$], "AWSEC2InstanceConnectService")
                    |> String.replace(~r[^ec2$], "AmazonEC2")
                    |> String.replace(~r[^ecrpublic$], "SpencerFrontendService")
                    |> String.replace(~r[^ecr$], "AmazonEC2ContainerRegistry_V20150921")
                    |> String.replace(~r[^ecs$], "AmazonEC2ContainerServiceV20141113")
                    |> String.replace(~r[^efs$], "MagnolioAPIService_v20150201")
                    |> String.replace(~r[^eksauth$], "EKSAuthFrontend")
                    |> String.replace(~r[^eks$], "AWSWesleyFrontend")
                    |> String.replace(~r[^elasticbeanstalk$], "AWSElasticBeanstalkService")
                    |> String.replace(~r[^elasticinference$], "EC2MatterhornCfSoothsayerApiGatewayLambda")
                    |> String.replace(~r[^elasticloadbalancingv2$], "ElasticLoadBalancing_v10")
                    |> String.replace(~r[^elasticloadbalancing$], "ElasticLoadBalancing_v7")
                    |> String.replace(~r[^elastictranscoder$], "EtsCustomerService")
                    |> String.replace(~r[^elasticache$], "AmazonElastiCacheV9")
                    |> String.replace(~r[^elasticsearchservice$], "AmazonElasticsearchService2015")
                    |> String.replace(~r[^emrcontainers$], "AwsChicagoWebService")
                    |> String.replace(~r[^emrserverless$], "AwsToledoWebService")
                    |> String.replace(~r[^emr$], "ElasticMapReduce")
                    |> String.replace(~r[^entityresolution$], "AWSVeniceService")
                    |> String.replace(~r[^eventbridge$], "AWSEvents")
                    |> String.replace(~r[^evidently$], "Evidently")
                    |> String.replace(~r[^finspacedata$], "AWSHabaneroPublicAPI")
                    |> String.replace(~r[^finspace$], "AWSHabaneroManagementService")
                    |> String.replace(~r[^firehose$], "Firehose_20150804")
                    |> String.replace(~r[^fis$], "FaultInjectionSimulator")
                    |> String.replace(~r[^fms$], "AWSFMS_20180101")
                    |> String.replace(~r[^forecast$], "AmazonForecast")
                    |> String.replace(~r[^forecastquery$], "AmazonForecastRuntime")
                    |> String.replace(~r[^frauddetector$], "AWSHawksNestServiceFacade")
                    |> String.replace(~r[^freetier$], "AWSFreeTierService")
                    |> String.replace(~r[^fsx$], "AWSSimbaAPIService_v20180301")
                    |> String.replace(~r[^gamelift$], "GameLift")
                    |> String.replace(~r[^glacier$], "Glacier")
                    |> String.replace(~r[^globalaccelerator$], "GlobalAccelerator_V20180706")
                    |> String.replace(~r[^glue$], "AWSGlue")
                    |> String.replace(~r[^grafana$], "AWSGrafanaControlPlane")
                    |> String.replace(~r[^greengrass$], "Greengrass")
                    |> String.replace(~r[^greengrassv2$], "GreengrassV2")
                    |> String.replace(~r[^groundstation$], "GroundStation")
                    |> String.replace(~r[^guardduty$], "GuardDutyAPIService")
                    |> String.replace(~r[^health$], "AWSHealth_20160804")
                    |> String.replace(~r[^healthlake$], "HealthLake")
                    |> String.replace(~r[^honeycode$], "SheetsPublicApiService")
                    |> String.replace(~r[^iam$], "AWSIdentityManagementV20100508")
                    |> String.replace(~r[^identitystore$], "AWSIdentityStore")
                    |> String.replace(~r[^imagebuilder$], "imagebuilder")
                    |> String.replace(~r[^inspectorscan$], "InspectorScan")
                    |> String.replace(~r[^inspector$], "InspectorService")
                    |> String.replace(~r[^inspector2$], "Inspector2")
                    |> String.replace(~r[^internetmonitor$], "InternetMonitor20210603")
                    |> String.replace(~r[^iot1clickdevicesservice$], "IoT1ClickDevicesService")
                    |> String.replace(~r[^iot1clickprojects$], "AWSIoT1ClickProjects")
                    |> String.replace(~r[^iotdataplane$], "IotMoonrakerService")
                    |> String.replace(~r[^ioteventsdata$], "IotColumboDataService")
                    |> String.replace(~r[^iotevents$], "IotColumboService")
                    |> String.replace(~r[^iotjobsdataplane$], "IotLaserThingJobManagerExternalService")
                    |> String.replace(~r[^iotroborunner$], "IoTRoboRunner")
                    |> String.replace(~r[^iotwireless$], "iotwireless")
                    |> String.replace(~r[^iot$], "AWSIotService")
                    |> String.replace(~r[^iotanalytics$], "AWSIoTAnalytics")
                    |> String.replace(~r[^iotdeviceadvisor$], "IotSenateService")
                    |> String.replace(~r[^iotfleethub$], "AWSIoTFleetHub")
                    |> String.replace(~r[^iotfleetwise$], "IoTAutobahnControlPlane")
                    |> String.replace(~r[^iotsecuretunneling$], "IoTSecuredTunneling")
                    |> String.replace(~r[^iotsitewise$], "AWSIoTSiteWise")
                    |> String.replace(~r[^iotthingsgraph$], "IotThingsGraphFrontEndService")
                    |> String.replace(~r[^iottwinmaker$], "AWSIoTTwinMaker")
                    |> String.replace(~r[^ivsrealtime$], "AmazonInteractiveVideoServiceRealTime")
                    |> String.replace(~r[^ivs$], "AmazonInteractiveVideoService")
                    |> String.replace(~r[^ivschat$], "AmazonInteractiveVideoServiceChat")
                    |> String.replace(~r[^kafka$], "Kafka")
                    |> String.replace(~r[^kafkaconnect$], "KafkaConnect")
                    |> String.replace(~r[^kendraranking$], "AWSKendraRerankingFrontendService")
                    |> String.replace(~r[^kendra$], "AWSKendraFrontendService")
                    |> String.replace(~r[^keyspaces$], "KeyspacesService")
                    |> String.replace(~r[^kinesisanalyticsv2$], "KinesisAnalytics_20180523")
                    |> String.replace(~r[^kinesisanalytics$], "KinesisAnalytics_20150814")
                    |> String.replace(~r[^kinesisvideoarchivedmedia$], "AWSAcuityReader")
                    |> String.replace(~r[^kinesisvideomedia$], "AWSAcuityInletService")
                    |> String.replace(~r[^kinesisvideosignaling$], "AWSAcuitySignalingService")
                    |> String.replace(~r[^kinesisvideowebrtcstorage$], "AWSAcuityRoutingServiceLambda")
                    |> String.replace(~r[^kinesisvideo$], "KinesisVideo_20170930")
                    |> String.replace(~r[^kinesis$], "Kinesis_20131202")
                    |> String.replace(~r[^kms$], "TrentService")
                    |> String.replace(~r[^lakeformation$], "AWSLakeFormation")
                    |> String.replace(~r[^lambda$], "AWSGirApiService")
                    |> String.replace(~r[^launchwizard$], "LaunchWizard")
                    |> String.replace(~r[^lexmodelbuildingservice$], "AWSDeepSenseModelBuildingService")
                    |> String.replace(~r[^lexmodelsv2$], "LexModelBuildingServiceV2")
                    |> String.replace(~r[^lexruntimeservice$], "AWSDeepSenseRunTimeService")
                    |> String.replace(~r[^lexruntimev2$], "AWSDeepSenseRunTimeServiceApi2_0")
                    |> String.replace(~r[^licensemanagerlinuxsubscriptions$], "LicenseManagerLinuxSubscriptions")
                    |> String.replace(~r[^licensemanagerusersubscriptions$], "LicenseManagerUserSubscriptions")
                    |> String.replace(~r[^licensemanager$], "AWSLicenseManager")
                    |> String.replace(~r[^lightsail$], "Lightsail_20161128")
                    |> String.replace(~r[^location$], "LocationService")
                    |> String.replace(~r[^lookoutequipment$], "AWSLookoutEquipmentFrontendService")
                    |> String.replace(~r[^lookoutmetrics$], "LookoutMetrics")
                    |> String.replace(~r[^lookoutvision$], "LookoutVisionService")
                    |> String.replace(~r[^m2$], "AwsSupernovaControlPlaneService")
                    |> String.replace(~r[^machinelearning$], "AmazonML_20141212")
                    |> String.replace(~r[^macie2$], "Macie2")
                    |> String.replace(~r[^managedblockchainquery$], "TietonChainQueryService")
                    |> String.replace(~r[^managedblockchain$], "TaigaWebService")
                    |> String.replace(~r[^marketplaceagreement$], "AWSMPCommerceService_v20200301")
                    |> String.replace(~r[^marketplacecatalog$], "AWSMPSeymour")
                    |> String.replace(~r[^marketplacecommerceanalytics$], "MarketplaceCommerceAnalytics20150701")
                    |> String.replace(~r[^marketplacedeployment$], "AWSMPDeploymentParametersService")
                    |> String.replace(~r[^marketplaceentitlementservice$], "AWSMPEntitlementService")
                    |> String.replace(~r[^marketplacemetering$], "AWSMPMeteringService")
                    |> String.replace(~r[^mediaconnect$], "MediaConnect")
                    |> String.replace(~r[^mediaconvert$], "MediaConvert")
                    |> String.replace(~r[^medialive$], "MediaLive")
                    |> String.replace(~r[^mediapackagevod$], "MediaPackageVod")
                    |> String.replace(~r[^mediapackage$], "MediaPackage")
                    |> String.replace(~r[^mediapackagev2$], "mediapackagev2")
                    |> String.replace(~r[^mediastoredata$], "MediaStoreObject_20170901")
                    |> String.replace(~r[^mediastore$], "MediaStore_20170901")
                    |> String.replace(~r[^mediatailor$], "MediaTailor")
                    |> String.replace(~r[^medicalimaging$], "AHIGatewayService")
                    |> String.replace(~r[^memorydb$], "AmazonMemoryDB")
                    |> String.replace(~r[^mgn$], "ApplicationMigrationService")
                    |> String.replace(~r[^migrationhubrefactorspaces$], "RefactorSpaces")
                    |> String.replace(~r[^migrationhub$], "AWSMigrationHub")
                    |> String.replace(~r[^migrationhubconfig$], "AWSMigrationHubMultiAccountService")
                    |> String.replace(~r[^migrationhuborchestrator$], "AWSMigrationHubOrchestrator")
                    |> String.replace(~r[^migrationhubstrategy$], "AWSMigrationHubStrategyRecommendation")
                    |> String.replace(~r[^mobile$], "AWSMobileService")
                    |> String.replace(~r[^mq$], "mq")
                    |> String.replace(~r[^mturk$], "MTurkRequesterServiceV20170117")
                    |> String.replace(~r[^mwaa$], "AmazonMWAA")
                    |> String.replace(~r[^neptunegraph$], "AmazonNeptuneGraph")
                    |> String.replace(~r[^neptune$], "AmazonRDSv19")
                    |> String.replace(~r[^neptunedata$], "AmazonNeptuneDataplane")
                    |> String.replace(~r[^networkfirewall$], "NetworkFirewall_20201112")
                    |> String.replace(~r[^networkmanager$], "NetworkManager")
                    |> String.replace(~r[^networkmonitor$], "NetworkMonitor")
                    |> String.replace(~r[^nimble$], "nimble")
                    |> String.replace(~r[^oam$], "oamservice")
                    |> String.replace(~r[^omics$], "Omics")
                    |> String.replace(~r[^opensearch$], "AmazonOpenSearchService")
                    |> String.replace(~r[^opensearchserverless$], "OpenSearchServerless")
                    |> String.replace(~r[^opsworks$], "OpsWorks_20130218")
                    |> String.replace(~r[^opsworkscm$], "OpsWorksCM_V2016_11_01")
                    |> String.replace(~r[^organizations$], "AWSOrganizationsV20161128")
                    |> String.replace(~r[^osis$], "AmazonOpenSearchIngestionService")
                    |> String.replace(~r[^outposts$], "OutpostsOlafService")
                    |> String.replace(~r[^panorama$], "OmniCloudServiceLambda")
                    |> String.replace(~r[^paymentcryptographydata$], "PaymentCryptographyDataPlane")
                    |> String.replace(~r[^paymentcryptography$], "PaymentCryptographyControlPlane")
                    |> String.replace(~r[^pcaconnectorad$], "PcaConnectorAd")
                    |> String.replace(~r[^personalizeevents$], "AmazonPersonalizeEvents")
                    |> String.replace(~r[^personalizeruntime$], "AmazonPersonalizeRuntime")
                    |> String.replace(~r[^personalize$], "AmazonPersonalize")
                    |> String.replace(~r[^pi$], "PerformanceInsightsv20180227")
                    |> String.replace(~r[^pinpointemail$], "AmazonPinpointEmailService")
                    |> String.replace(~r[^pinpointsmsvoicev2$], "PinpointSMSVoiceV2")
                    |> String.replace(~r[^pinpointsmsvoice$], "PinpointSMSVoice")
                    |> String.replace(~r[^pinpoint$], "Pinpoint")
                    |> String.replace(~r[^pipes$], "Pipes")
                    |> String.replace(~r[^polly$], "Parrot_v1")
                    |> String.replace(~r[^pricing$], "AWSPriceListService")
                    |> String.replace(~r[^privatenetworks$], "E5GNetworkControllerLambda")
                    |> String.replace(~r[^proton$], "AwsProton20200720")
                    |> String.replace(~r[^qbusiness$], "ExpertQ")
                    |> String.replace(~r[^qconnect$], "WisdomService")
                    |> String.replace(~r[^qldbsession$], "QLDBSession")
                    |> String.replace(~r[^qldb$], "AmazonQLDB")
                    |> String.replace(~r[^quicksight$], "QuickSight_20180401")
                    |> String.replace(~r[^ram$], "AmazonResourceSharing")
                    |> String.replace(~r[^rbin$], "AmazonRecycleBin")
                    |> String.replace(~r[^rdsdata$], "RdsDataService")
                    |> String.replace(~r[^rds$], "AmazonRDSv19")
                    |> String.replace(~r[^redshiftdata$], "RedshiftData")
                    |> String.replace(~r[^redshiftserverless$], "RedshiftServerless")
                    |> String.replace(~r[^redshift$], "RedshiftServiceVersion20121201")
                    |> String.replace(~r[^rekognition$], "RekognitionService")
                    |> String.replace(~r[^repostspace$], "RepostSpace")
                    |> String.replace(~r[^resiliencehub$], "AwsResilienceHub")
                    |> String.replace(~r[^resourceexplorer2$], "ResourceExplorer")
                    |> String.replace(~r[^resourcegroupstaggingapi$], "ResourceGroupsTaggingAPI_20170126")
                    |> String.replace(~r[^resourcegroups$], "Ardi")
                    |> String.replace(~r[^robomaker$], "robomaker")
                    |> String.replace(~r[^rolesanywhere$], "RolesAnywhere")
                    |> String.replace(~r[^route53domains$], "Route53Domains_v20140515")
                    |> String.replace(~r[^route53$], "AWSDnsV20130401")
                    |> String.replace(~r[^route53recoverycluster$], "ToggleCustomerAPI")
                    |> String.replace(~r[^route53recoverycontrolconfig$], "Route53RecoveryControlConfig")
                    |> String.replace(~r[^route53recoveryreadiness$], "Route53RecoveryReadiness")
                    |> String.replace(~r[^route53resolver$], "Route53Resolver")
                    |> String.replace(~r[^rum$], "RUM")
                    |> String.replace(~r[^s3control$], "AWSS3ControlServiceV20180820")
                    |> String.replace(~r[^s3$], "AmazonS3")
                    |> String.replace(~r[^s3outposts$], "S3Outposts")
                    |> String.replace(~r[^sagemakera2iruntime$], "AmazonSageMakerA2IRuntime")
                    |> String.replace(~r[^sagemakeredge$], "AmazonSageMakerEdge")
                    |> String.replace(~r[^sagemakerfeaturestoreruntime$], "AmazonSageMakerFeatureStoreRuntime")
                    |> String.replace(~r[^sagemakergeospatial$], "SageMakerGeospatial")
                    |> String.replace(~r[^sagemakermetrics$], "SageMakerMetricsService")
                    |> String.replace(~r[^sagemakerruntime$], "AmazonSageMakerRuntime")
                    |> String.replace(~r[^sagemaker$], "SageMaker")
                    |> String.replace(~r[^savingsplans$], "AWSSavingsPlan")
                    |> String.replace(~r[^scheduler$], "AWSChronosService")
                    |> String.replace(~r[^schemas$], "schemas")
                    |> String.replace(~r[^secretsmanager$], "secretsmanager")
                    |> String.replace(~r[^securityhub$], "SecurityHubAPIService")
                    |> String.replace(~r[^securitylake$], "SecurityLake")
                    |> String.replace(~r[^serverlessapplicationrepository$], "ServerlessApplicationRepository")
                    |> String.replace(~r[^servicecatalogappregistry$], "AWS242AppRegistry")
                    |> String.replace(~r[^servicecatalog$], "AWS242ServiceCatalogService")
                    |> String.replace(~r[^servicequotas$], "ServiceQuotasV20190624")
                    |> String.replace(~r[^servicediscovery$], "Route53AutoNaming_v20170314")
                    |> String.replace(~r[^ses$], "SimpleEmailService")
                    |> String.replace(~r[^sesv2$], "SimpleEmailService_v2")
                    |> String.replace(~r[^sfn$], "AWSStepFunctions")
                    |> String.replace(~r[^shield$], "AWSShield_20160616")
                    |> String.replace(~r[^signer$], "WallabyService")
                    |> String.replace(~r[^simspaceweaver$], "SimSpaceWeaver")
                    |> String.replace(~r[^sms$], "AWSServerMigrationService_V2016_10_24")
                    |> String.replace(~r[^snowdevicemanagement$], "SnowDeviceManagement")
                    |> String.replace(~r[^snowball$], "AWSIESnowballJobManagementService")
                    |> String.replace(~r[^sns$], "AmazonSimpleNotificationService")
                    |> String.replace(~r[^sqs$], "AmazonSQS")
                    |> String.replace(~r[^ssmcontacts$], "SSMContacts")
                    |> String.replace(~r[^ssmincidents$], "SSMIncidents")
                    |> String.replace(~r[^ssmsap$], "SsmSap")
                    |> String.replace(~r[^ssm$], "AmazonSSM")
                    |> String.replace(~r[^ssoadmin$], "SWBExternalService")
                    |> String.replace(~r[^ssooidc$], "AWSSSOOIDCService")
                    |> String.replace(~r[^sso$], "SWBPortalService")
                    |> String.replace(~r[^storagegateway$], "StorageGateway_20130630")
                    |> String.replace(~r[^sts$], "AWSSecurityTokenServiceV20110615")
                    |> String.replace(~r[^supplychain$], "GalaxyPublicAPIGateway")
                    |> String.replace(~r[^supportapp$], "SupportApp")
                    |> String.replace(~r[^support$], "AWSSupport_20130415")
                    |> String.replace(~r[^swf$], "SimpleWorkflowService")
                    |> String.replace(~r[^synthetics$], "Synthetics")
                    |> String.replace(~r[^textract$], "Textract")
                    |> String.replace(~r[^timestreamquery$], "Timestream_20181101")
                    |> String.replace(~r[^timestreamwrite$], "Timestream_20181101")
                    |> String.replace(~r[^tnb$], "TNB")
                    |> String.replace(~r[^transcribestreaming$], "Transcribe")
                    |> String.replace(~r[^transcribe$], "Transcribe")
                    |> String.replace(~r[^transfer$], "TransferService")
                    |> String.replace(~r[^translate$], "AWSShineFrontendService_20170701")
                    |> String.replace(~r[^trustedadvisor$], "TrustedAdvisor")
                    |> String.replace(~r[^verifiedpermissions$], "VerifiedPermissions")
                    |> String.replace(~r[^voiceid$], "VoiceID")
                    |> String.replace(~r[^vpclattice$], "MercuryControlPlane")
                    |> String.replace(~r[^wafregional$], "AWSWAF_Regional_20161128")
                    |> String.replace(~r[^waf$], "AWSWAF_20150824")
                    |> String.replace(~r[^wafv2$], "AWSWAF_20190729")
                    |> String.replace(~r[^wellarchitected$], "WellArchitectedApiServiceLambda")
                    |> String.replace(~r[^wisdom$], "WisdomService")
                    |> String.replace(~r[^workdocs$], "AWSGorillaBoyService")
                    |> String.replace(~r[^worklink$], "WorkLink")
                    |> String.replace(~r[^workmail$], "WorkMailService")
                    |> String.replace(~r[^workmailmessageflow$], "GiraffeMessageInTransitService")
                    |> String.replace(~r[^workspacesthinclient$], "ThinClient")
                    |> String.replace(~r[^workspacesweb$], "AWSErmineControlPlaneService")
                    |> String.replace(~r[^workspaces$], "WorkspacesService")
                    |> String.replace(~r[^xray$], "AWSXRay")
    IO.puts("api_name: #{api_name}")
    IO.puts("service_name: #{service_name}")
    api = api_filename |> parse_json()
    traits = api["shapes"]["com.amazonaws." <> api_name <> "#" <> service_name]["traits"]
    # IO.puts inspect(traits, pretty: true)
    protocol = Enum.find_value(traits, fn {k, _v} ->
                 case String.split(k, "#") do
                   ["aws.protocols", protocol] -> protocol
                   _ -> nil
                 end
               end)
               |> String.replace("restJson1", "rest_json")
               |> String.replace("awsJson1_0", "json")
               |> String.replace("awsJson1_1", "json")
               |> String.replace("awsQuery", "query")
               |> String.replace("restXml", "rest_xml")
               |> String.replace("ec2Query", "ec2")
               |> String.to_atom()
    IO.puts inspect(protocol, pretty: true)
    module_name = module_name(traits, language)
    IO.puts inspect(module_name, pretty: true)
    filename = filename(module_name, language)
    %AWS.CodeGen.Spec{
      protocol: protocol,
      module_name: module_name,
      filename: filename,
      api: api,
      language: language
    }
  end

  def lowercase_keys(map) when is_map(map) do
    map
    |> Enum.map(fn
      {k, v} when is_map(v) -> {String.downcase(k), lowercase_keys(v)}
      {k, v} -> {String.downcase(k), v}
    end)
    |> Enum.into(%{})
  end

  def parse_json(path) do
    if File.exists?(path) do
      path |> File.read!() |> Poison.Parser.parse!(%{})
    end
  end

  defp module_name(traits, language) do
    service_name =
      case traits["aws.api#service"] do
        %{"endpointPrefix" => _} ->
          traits["aws.api#service"]["endpointPrefix"]
        %{"arnNamespace" => _} ->
          traits["aws.api#service"]["arnNamespace"]
        %{"sdkId" => _} ->
          traits["aws.api#service"]["sdkId"]
      end
      |> String.replace("-sync", "Sync")
      |> String.replace("Route 53", "Route53")
      |> String.replace(~r/ Service$/, "")
      |> String.replace("dynamodb", "DynamoDB")
      |> String.replace("api.pricing", "API.Pricing")
      |> String.replace("mobileanalytics", "MobileAnalytics")
      |> String.replace("entitlement.marketplace", "Entitlement.Marketplace")

    case language do
      :elixir ->
        service_name =
          service_name
          |> String.replace(" connections", " Connections")
          |> String.replace(" ", "")
          |> AWS.CodeGen.Name.upcase_first()

        "AWS.#{service_name}"

      :erlang ->
        # TODO: fix cases like "mobileanalytics"
        service_name =
          service_name
          |> String.replace(" ", "_")
          |> String.replace(".", "_")
          |> String.replace("-", "_")
          |> String.downcase()
          |> AWS.CodeGen.Name.to_snake_case()

        "aws_#{service_name}"
    end
  end

  defp filename(module_name, :elixir) do
    module_name =
      module_name
      |> String.replace("AWS.", "")
      |> String.replace(@module_acronyms ++ ~w(DynamoDB ElastiCache), &String.capitalize(&1))
      |> String.replace(".", "")

    name =
      if module_name == String.upcase(module_name) do
        String.downcase(module_name)
      else
        AWS.CodeGen.Name.to_snake_case(module_name)
      end

    "#{name}.ex"
  end

  defp filename(module_name, :erlang) do
    "#{module_name}.erl"
  end
end
