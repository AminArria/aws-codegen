defmodule AWS.<%= context.abbreviation %> do
  @moduledoc """
<%= context.docstring %>
  """
<%= for action <- context.actions do %>
  @doc """
<%= action.docstring %>
  """
  def <%= action.function_name %>(client, input, options \\ []) do
    request(client, "<%= action.name %>", input, options)
  end
<% end %>
  defp request(client, action, input, options) do
    host = "<%= context.endpoint_prefix %>.#{client.region}.#{client.endpoint}"
    url = "https://#{host}/"
    headers = ["Host": host,
               "Content-Type": "application/x-amz-json-<%= context.json_version %>",
               "X-Amz-Target": "<%= context.abbreviation %>_<%= context.api_version %>.#{action}"]
    payload = Poison.Encoder.encode(input)
    headers = AWS.Request.sign_v4(client, "POST", url, headers, payload)
    case HTTPoison.post(url, payload, headers, options) do
      {:ok, response=%HTTPoison.Response{status_code: 200, body: body}} ->
        {:ok, Poison.Parser.parse!(body), response}
      {:ok, response=%HTTPoison.Response{body: body}} ->
        {:error, "decode error from body"}
      {:error, %HTTPoison.Error{reason: reason}} ->
        {:error, %HTTPoison.Error{reason: reason}}
    end
  end
end
